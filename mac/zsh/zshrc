bindkey -e

if [[ -n $TMUX ]]; then
  ### Added by Zinit's installer
  if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
      print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})…%f"
      command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
      command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
          print -P "%F{33} %F{34}Installation successful.%f%b" || \
          print -P "%F{160} The clone has failed.%f%b"
  fi

  source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
  autoload -Uz _zinit
  (( ${+_comps} )) && _comps[zinit]=_zinit

  # Load a few important annexes, without Turbo
  # (this is currently required for annexes)
  zinit light-mode for \
      zdharma-continuum/zinit-annex-as-monitor \
      zdharma-continuum/zinit-annex-bin-gem-node \
      zdharma-continuum/zinit-annex-patch-dl \
      zdharma-continuum/zinit-annex-rust

  ### End of Zinit's installer chunk

  #
  # プラグインインストール
  #
  # ディレクトリスタック
  zinit ice wait'!0' src"directory.zsh" silent; zinit light cm-hirano-shigetoshi/directory-stack
  # コマンド履歴
  zinit ice wait'!0' src"history.zsh" silent; zinit light cm-hirano-shigetoshi/CommandHistory
  zle -N fzf-command-history
  bindkey "^r" fzf-command-history

  # コマンドに色を付ける
  zinit ice wait'!0' silent; zinit light zdharma/fast-syntax-highlighting
  # クリップボード履歴
  zinit ice wait'!0' silent; zinit light cm-hirano-shigetoshi/clipboard-history
  # スニペットの貼り付け機能
  zinit ice wait'!0' silent; zinit light cm-hirano-shigetoshi/snippet
  # ファイル名検索
  zinit ice wait'!0' src"FzfFileSelector" silent; zinit light cm-hirano-shigetoshi/FzfFileSelector
  zle -N _fzf_file_selector
  bindkey '\e[Z' _fzf_file_selector
  # Powerlevel10k
  zinit ice depth=1
  zinit light romkatv/powerlevel10k

  # git
  zinit ice wait'!0' src"git.zsh" silent; zinit light cm-hirano-shigetoshi/fzf-git
  # Ninja
  zinit ice wait'!0' src"ninja.zsh" silent; zinit light cm-hirano-shigetoshi/cli-ninja
  zinit ice wait'!0' src"ninja.zsh" silent; zinit light cm-hirano-shigetoshi/CommandLineNinja
  # aws cliコマンド拡張
  zinit ice wait'!0' src"aws-cli-fzf.zsh" silent; zinit light cm-hirano-shigetoshi/aws-cli-fzf


  #
  # asdf
  #
  source "$HOME/.asdf/asdf.sh"
  #
  # direnv
  #
  if which -p direnv >/dev/null; then
    eval "$(direnv hook zsh)"
  fi
  #
  # 一般の設定
  #
  # Ctrl+s（ターミナルロック）を無効化。これがないとCtrl+sを含むキーバインドが無効になる。
  stty stop undef
  # Ctrl+d でターミナルを閉じないようにする
  setopt IGNOREEOF
  # 特殊文字の中で「単語」の境界として扱う文字を指定
  WORDCHARS="*?.-_[]~&;!#$%^(){}<>"
  # ヒストリにはスペースなどを整形した状態で保存する
  setopt hist_reduce_blanks
  # 直前と同じヒストリは記録しない
  setopt hist_ignore_dups
  # deleteキー
  bindkey "^[[3~"  delete-char
  bindkey "^[3;5~" delete-char

  #
  # 補完の設定
  #
  # zsh の補完機能を使うおまじない
  autoload -Uz compinit
  compinit -C
  # 補完候補にも色を付ける
  zstyle ':completion:*' list-colors 'di=34;1'
  # ファイル名の途中でも補完候補とし、小文字は大文字としても検索
  zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}' 'l:|=* r:|[.-]=* m:{a-z}={A-Z}'

  #
  # 一時的な設定
  #
  if which -p ls | grep -qF 'coreutils'; then
    alias ls='ls --color=auto'
  else
    alias ls='ls -G'
  fi
  export EDITOR="vim"
  if which -p arch >/dev/null 2>&1 && [[ $(arch) = "arm64" ]]; then
    alias arm64='arch -arch arm64'
    alias x86='arch -arch x86_64'
  fi
  alias which="$(where which | grep -v 'built-in' | head -1)"

  #
  # Java
  #
  if [[ -d /Library/Java/JavaVirtualMachines/amazon-corretto-15.jdk/Contents/Home ]]; then
    export JAVA_HOME=/Library/Java/JavaVirtualMachines/amazon-corretto-15.jdk/Contents/Home
  fi

  # 意図的に使いたいものは最後に加える
  PATH="$HOME/bin/master:$PATH"
  # 実験中のファイルはbin/developに置く
  PATH="$HOME/bin/develop:$PATH"

  typeset -U path PATH

  ln -sf /opt/homebrew_x86/bin/nvim $HOME/bin/master/vim
fi

### MANAGED BY RANCHER DESKTOP START (DO NOT EDIT)
export PATH="/Users/hirano.shigetoshi/.rd/bin:$PATH"
### MANAGED BY RANCHER DESKTOP END (DO NOT EDIT)

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
